/**
 * @fileoverview added by tsickle
 * Generated from: src/reducers/entity-collection-creator.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional } from '@angular/core';
import { EntityDefinitionService } from '../entity-metadata/entity-definition.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../entity-metadata/entity-definition.service';
export class EntityCollectionCreator {
    /**
     * @param {?=} entityDefinitionService
     */
    constructor(entityDefinitionService) {
        this.entityDefinitionService = entityDefinitionService;
    }
    /**
     * Create the default collection for an entity type.
     * @template T, S
     * @param {?} entityName {string} entity type name
     * @return {?}
     */
    create(entityName) {
        /** @type {?} */
        const def = this.entityDefinitionService &&
            this.entityDefinitionService.getDefinition(entityName, false /*shouldThrow*/);
        /** @type {?} */
        const initialState = def && def.initialState;
        return (/** @type {?} */ ((initialState || createEmptyEntityCollection(entityName))));
    }
}
EntityCollectionCreator.ɵfac = function EntityCollectionCreator_Factory(t) { return new (t || EntityCollectionCreator)(ɵngcc0.ɵɵinject(ɵngcc1.EntityDefinitionService, 8)); };
EntityCollectionCreator.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: EntityCollectionCreator, factory: EntityCollectionCreator.ɵfac });
/** @nocollapse */
EntityCollectionCreator.ctorParameters = () => [
    { type: EntityDefinitionService, decorators: [{ type: Optional }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EntityCollectionCreator, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.EntityDefinitionService, decorators: [{
                type: Optional
            }] }]; }, null); })();
if (false) {
    /**
     * @type {?}
     * @private
     */
    EntityCollectionCreator.prototype.entityDefinitionService;
}
/**
 * @template T
 * @param {?=} entityName
 * @return {?}
 */
export function createEmptyEntityCollection(entityName) {
    return (/** @type {?} */ ({
        entityName,
        ids: [],
        entities: {},
        filter: undefined,
        loaded: false,
        loading: false,
        changeState: {},
    }));
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LWNvbGxlY3Rpb24tY3JlYXRvci5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9kYXRhL3NyYy9yZWR1Y2Vycy9lbnRpdHktY29sbGVjdGlvbi1jcmVhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHckQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOENBQThDLENBQUM7OztBQUd2RixNQUFNLE9BQU8sdUJBQXVCO0FBQ3BDO0FBQVE7QUFDNEI7QUFBUSxJQUQxQyxZQUNzQix1QkFBaUQ7QUFDdEUsUUFEcUIsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUEwQjtBQUN6RSxJQUFLLENBQUM7QUFDTjtBQUVDO0FBQ0U7QUFBc0I7QUFFQTtBQUFtQjtBQUFRLElBQWxELE1BQU0sQ0FDSixVQUFrQjtBQUNuQjtBQUVBLGNBRE8sR0FBRyxHQUNQLElBQUksQ0FBQyx1QkFBdUI7QUFDbEMsWUFBTSxJQUFJLENBQUMsdUJBQXVCLENBQUMsYUFBYSxDQUN4QyxVQUFVLEVBQ1YsS0FBSyxDQUFDLGVBQWUsQ0FDdEI7QUFDUDtBQUN3QixjQUFkLFlBQVksR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLFlBQVk7QUFDaEQsUUFDSSxPQUFPLG1CQUFHLENBQUMsWUFBWSxJQUFJLDJCQUEyQixDQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUEsQ0FBQztBQUMzRSxJQUFFLENBQUM7QUFDSDttREF4QkMsVUFBVTtxSUFDVDtBQUFDO0FBQW1CO0FBRUwsWUFMUix1QkFBdUIsdUJBSzNCLFFBQVE7QUFBTTs7Ozs7a0NBQUU7QUFBQztBQUFhO0FBQVE7QUFBaUI7QUFDMUQ7QUFFQSxJQUhFLDBEQUFxRTtBQUN6RTtBQUFFO0FBQUk7QUFHQztBQUEwQjtBQUFlO0FBbUJoRCxNQUFNLFVBQVUsMkJBQTJCLENBQ3pDLFVBQW1CO0FBQ2xCLElBQ0QsT0FBTyxtQkFBQTtBQUNULFFBQUksVUFBVTtBQUNkLFFBQUksR0FBRyxFQUFFLEVBQUU7QUFDWCxRQUFJLFFBQVEsRUFBRSxFQUFFO0FBQ2hCLFFBQUksTUFBTSxFQUFFLFNBQVM7QUFDckIsUUFBSSxNQUFNLEVBQUUsS0FBSztBQUNqQixRQUFJLE9BQU8sRUFBRSxLQUFLO0FBQ2xCLFFBQUksV0FBVyxFQUFFLEVBQUU7QUFDbkIsS0FBRyxFQUF1QixDQUFDO0FBQzNCLENBQUM7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEVudGl0eUNvbGxlY3Rpb24gfSBmcm9tICcuL2VudGl0eS1jb2xsZWN0aW9uJztcbmltcG9ydCB7IEVudGl0eURlZmluaXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vZW50aXR5LW1ldGFkYXRhL2VudGl0eS1kZWZpbml0aW9uLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRW50aXR5Q29sbGVjdGlvbkNyZWF0b3Ige1xuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGVudGl0eURlZmluaXRpb25TZXJ2aWNlPzogRW50aXR5RGVmaW5pdGlvblNlcnZpY2VcbiAgKSB7fVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlIGRlZmF1bHQgY29sbGVjdGlvbiBmb3IgYW4gZW50aXR5IHR5cGUuXG4gICAqIEBwYXJhbSBlbnRpdHlOYW1lIHtzdHJpbmd9IGVudGl0eSB0eXBlIG5hbWVcbiAgICovXG4gIGNyZWF0ZTxUID0gYW55LCBTIGV4dGVuZHMgRW50aXR5Q29sbGVjdGlvbjxUPiA9IEVudGl0eUNvbGxlY3Rpb248VD4+KFxuICAgIGVudGl0eU5hbWU6IHN0cmluZ1xuICApOiBTIHtcbiAgICBjb25zdCBkZWYgPVxuICAgICAgdGhpcy5lbnRpdHlEZWZpbml0aW9uU2VydmljZSAmJlxuICAgICAgdGhpcy5lbnRpdHlEZWZpbml0aW9uU2VydmljZS5nZXREZWZpbml0aW9uPFQ+KFxuICAgICAgICBlbnRpdHlOYW1lLFxuICAgICAgICBmYWxzZSAvKnNob3VsZFRocm93Ki9cbiAgICAgICk7XG5cbiAgICBjb25zdCBpbml0aWFsU3RhdGUgPSBkZWYgJiYgZGVmLmluaXRpYWxTdGF0ZTtcblxuICAgIHJldHVybiA8Uz4oaW5pdGlhbFN0YXRlIHx8IGNyZWF0ZUVtcHR5RW50aXR5Q29sbGVjdGlvbjxUPihlbnRpdHlOYW1lKSk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVtcHR5RW50aXR5Q29sbGVjdGlvbjxUPihcbiAgZW50aXR5TmFtZT86IHN0cmluZ1xuKTogRW50aXR5Q29sbGVjdGlvbjxUPiB7XG4gIHJldHVybiB7XG4gICAgZW50aXR5TmFtZSxcbiAgICBpZHM6IFtdLFxuICAgIGVudGl0aWVzOiB7fSxcbiAgICBmaWx0ZXI6IHVuZGVmaW5lZCxcbiAgICBsb2FkZWQ6IGZhbHNlLFxuICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgIGNoYW5nZVN0YXRlOiB7fSxcbiAgfSBhcyBFbnRpdHlDb2xsZWN0aW9uPFQ+O1xufVxuIl19